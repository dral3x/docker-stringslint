name: Docker Image CI

on:
  create:
  push:
    branches: [master, dev]
    paths:
      - ".github/actions/*/action.yml"
      - ".github/workflows/*.yml"
      - "*/Dockerfile"
  pull_request:
    paths:
      - ".github/actions/*/action.yml"
      - ".github/workflows/*.yml"
      - "*/Dockerfile"

jobs:
  build_stringslint:
    name: Build StringsLint ${{ matrix.target_arch }} architecture
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_arch: ["amd64", "arm64"]

    env:
      CONTAINER_REPOSITORIES: '["dral3x/StringsLint", "ghcr.io/dral3x/stringslint"]'
      #STRINGSLINT_REVISION: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' && github.event.ref || '0.1.7' }}
      STRINGSLINT_REVISION: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' && github.event.ref || '0.1.7' }}
      TARGET_SWIFT_VERSION: "5.10.1"

    outputs:
      push: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' && 'true' || 'false' }}
      repositories: ${{ env.CONTAINER_REPOSITORIES }}
      swift_version: ${{ env.TARGET_SWIFT_VERSION }}
      stringslint_revision: ${{ env.STRINGSLINT_REVISION }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/install_qemu_user_static_from_debian

      - uses: ./.github/actions/configure-docker-containerd-image-store

      - name: build ${{ matrix.target_arch }} architecture
        uses: docker/build-push-action@v5
        with:
          build-args: |
            BUILDER_IMAGE=swiftlang/swift:nightly-jammy
            FIX_SWIFTPM_7695=1
            PREFER_BUILDARCH=1
            STRINGSLINT_REVISION=${{ env.STRINGSLINT_REVISION }}
            TARGET_IMAGE=swift:${{ env.TARGET_SWIFT_VERSION }}-jammy
          context: builder
          load: true
          platforms: linux/${{ matrix.target_arch }}
          tags: stringslint
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: archive
        run: >
          docker run --platform linux/${{ matrix.target_arch }} --rm stringslint archive-stringslint-runtime
          > copier/stringslint_linux_${{ matrix.target_arch }}.tar.gz

      - name: upload ${{ matrix.target_arch }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: stringslint_${{ matrix.target_arch }}
          path: copier/stringslint_linux_${{ matrix.target_arch }}.tar.gz

  build_slim_tags:
    name: Build slim tags
    needs: build_stringslint
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.slim_tag_list.outputs.list }}
    steps:
      - uses: actions/checkout@v4

      - id: slim_tags
        uses: ./.github/actions/product
        with:
          a: ${{ needs.build_stringslint.outputs.repositories }}
          b: '["slim", "${{ needs.build_stringslint.outputs.stringslint_revision }}-slim"]'
          sep: '":"'

      - id: slim_tag_list
        uses: ./.github/actions/list
        with:
          array: ${{ steps.slim_tags.outputs.product }}

  build_slim_image_using_copier:
    name: Build slim image using copier
    needs: [build_stringslint, build_slim_tags]
    uses: ./.github/workflows/build-image-using-copier.yml
    with:
      image_name: slim
      build-args: |
        RUNTIME_IMAGE=ubuntu:jammy
        TARGET_IMAGE=swift:${{ needs.build_stringslint.outputs.swift_version }}-jammy
      tags: ${{ needs.build_slim_tags.outputs.tags }}
      push: ${{ needs.build_stringslint.outputs.push }}
    secrets: inherit

  build_images_on_swift_image:
    name: Build image on swift-${{ matrix.swift_version }} image
    needs: build_stringslint
    strategy:
      fail-fast: false
      matrix:
        swift_version: ["5.9.6", "5.10.0", "5.10.1"]
        include:
          - swift_version: "5.9.6"
            swift_version_aliases: ["5.9"]
          - swift_version: "5.10.1"
            swift_version_aliases: ["5", "5.10"]
            latest: "true"

    uses: ./.github/workflows/build-image-on-swift-image-using-copier.yml
    with:
      latest: ${{ matrix.latest }}
      push: ${{ needs.build_stringslint.outputs.push }}
      repositories: ${{ needs.build_stringslint.outputs.repositories }}
      swift_version: ${{ matrix.swift_version }}
      swift_version_aliases: ${{ toJSON(matrix.swift_version_aliases) }}
      stringslint_revision: ${{ needs.build_stringslint.outputs.stringslint_revision }}
    secrets: inherit
